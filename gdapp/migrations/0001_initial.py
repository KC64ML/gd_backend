<<<<<<< HEAD
# Generated by Django 3.2.7 on 2021-10-03 07:41
=======
# Generated by Django 3.2.7 on 2021-10-03 09:12
>>>>>>> temp

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gdapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('pk_userid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45, unique=True)),
                ('phonenumber', models.CharField(max_length=12)),
                ('email', models.CharField(max_length=64, unique=True)),
                ('familyname', models.CharField(max_length=5)),
                ('age', models.CharField(max_length=3)),
                ('dateofonesbirth', models.CharField(max_length=6)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'username',
                'verbose_name_plural': 'username',
            },
            managers=[
                ('objects', gdapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Communicatewithpeople',
            fields=[
                ('chattinghistory', models.CharField(blank=True, max_length=45, null=True)),
                ('user_pk_userid', models.OneToOneField(db_column='User_pk_userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gdapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('password', models.CharField(max_length=20)),
                ('date', models.CharField(max_length=10)),
                ('contents', models.TextField(blank=True, null=True)),
                ('user_pk_userid', models.OneToOneField(db_column='User_pk_userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gdapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Drugnotification',
            fields=[
                ('approximately_time_remaining', models.CharField(blank=True, max_length=20, null=True)),
                ('drug_name', models.CharField(blank=True, max_length=20, null=True)),
                ('user_pk_userid', models.OneToOneField(db_column='User_pk_userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gdapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('gamerecord', models.CharField(blank=True, max_length=45, null=True)),
                ('user_pk_userid', models.OneToOneField(db_column='User_pk_userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gdapp.user')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('rarea', models.CharField(max_length=20)),
                ('locationcol', models.CharField(db_column='Locationcol', max_length=45)),
                ('user_pk_userid', models.OneToOneField(db_column='User_pk_userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gdapp.user')),
            ],
        ),
    ]
